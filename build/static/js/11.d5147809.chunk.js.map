{"version":3,"sources":["services/playlist.js","pages/discover/c-pages/toplist/style.js","pages/discover/c-pages/toplist/index.js","services/toplist.js"],"names":["getPlayListDetail","id","request","url","params","getPlayListSongs","ids","join","getPlayList","getPlayListCatlist","getRelatedPlayList","getSimiPlayList","TopListWrapper","styled","div","memo","props","search","URLSearchParams","location","parseInt","get","useState","creator","tags","playList","setPlaylist","songs","setSongs","history","useHistory","topList","setTopList","dispatch","useDispatch","useEffect","then","res","list","paramsId","playlist","trackIds","map","item","toplistClick","useCallback","replace","className","slice","index","style","backgroundColor","onClick","e","src","getSizeImage","coverImgUrl","alt","name","updateFrequency","avatarUrl","nickname","preventDefault","length","changePlaylistAction","getCurrentSongAction","description"],"mappings":"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","file":"static/js/11.d5147809.chunk.js","sourcesContent":["import request from \"@/utils/request\";\n\nexport const getPlayListDetail = (id) =>\n  request({\n    url: \"/playlist/detail\",\n    params: {\n      id,\n    },\n  });\n\nexport const getPlayListSongs = (ids) =>\n  request({\n    url: \"/song/detail\",\n    params: {\n      ids: ids.join(\",\"),\n    },\n  });\nexport const getPlayList = (params) =>\n  request({\n    url: \"/top/playlist\",\n    params: params,\n  });\n//歌单分类\nexport const getPlayListCatlist = () =>\n  request({\n    url: \"/playlist/catlist\",\n  });\nexport const getRelatedPlayList = (id) =>\n  request({\n    url: \"/related/playlist\",\n    params: { id },\n  });\nexport const getSimiPlayList = (id) =>\n  request({\n    url: \"/simi/playlist\",\n    params: { id },\n  });\n","import styled from \"styled-components\";\nexport const TopListWrapper = styled.div`\n  width: 980px;\n  margin: 0 auto;\n  border: 1px solid #d3d3d3;\n  border-top: 0;\n  border-bottom: 0;\n  background-color: #fff;\n  display: flex;\n  .left {\n    width: 240px;\n    border-right: 1px solid #ccc;\n    padding-top: 30px;\n    .title {\n      padding: 0 10px 12px 15px;\n      font-size: 14px;\n      color: #000;\n      font-weight: 700;\n      font-family: simsun;\n    }\n    .toplist {\n      .item {\n        display: flex;\n        padding: 10px 0 10px 20px;\n        cursor: pointer;\n        align-items: center;\n        &:hover {\n          background: #e6e6e6;\n        }\n        .item-left {\n          margin-right: 10px;\n        }\n        .item-right {\n          color: #999;\n          .name {\n            color: #333;\n          }\n        }\n      }\n    }\n  }\n\n  .right {\n    width: 740px;\n    .play-list-wrap {\n      margin-top: 40px;\n    }\n    .top {\n      display: flex;\n    }\n    padding: 47px 30px 40px 39px;\n    .img-wrap {\n      width: 190px;\n      height: 190px;\n      img {\n        width: 100%;\n        height: 100%;\n      }\n    }\n    .playlist-info {\n      flex: 1;\n      margin-left: 20px;\n\n      .title {\n        font-size: 20px;\n        display: flex;\n        align-items: center;\n        margin-bottom: 10px;\n        i {\n          display: inline-block;\n          width: 54px;\n          height: 24px;\n          background-position: 0 -243px;\n          margin-right: 10px;\n        }\n      }\n      .info {\n        display: flex;\n        align-items: center;\n        a {\n          margin-right: 15px;\n          color: #0c73c2;\n        }\n        img {\n          width: 35px;\n          height: 35px;\n          margin-right: 10px;\n        }\n      }\n      .add-icon {\n        display: inline-block;\n        width: 31px;\n        height: 31px;\n        margin-left: -3px;\n        padding-right: 0;\n        background-position: 0 -1588px;\n        text-indent: -9999px;\n      }\n      .btns {\n        margin: 20px 0;\n        display: flex;\n        .play {\n          display: inline-flex;\n          justify-content: center;\n          align-items: center;\n          background-position: 0 -387px;\n          text-align: center;\n          width: 61px;\n          height: 31px;\n          color: #fff;\n          i {\n            display: inline-block;\n            width: 20px;\n            height: 18px;\n            margin: -2px 2px 0;\n            background-position: 0 -1622px;\n          }\n        }\n        .add-icon {\n          display: inline-block;\n          width: 31px;\n          height: 31px;\n          margin-left: -3px;\n          padding-right: 0;\n          background-position: 0 -1588px;\n          text-indent: -9999px;\n        }\n        .item {\n          display: inline-block;\n          height: 31px;\n          margin-right: 6px;\n          padding-right: 5px;\n          background-position: right -1020px;\n          display: flex;\n          align-items: center;\n        }\n        .comment-icon {\n          background-position: 0 -1465px;\n        }\n      }\n      .tags {\n      }\n    }\n  }\n`;\n","import { changePlaylistAction, getCurrentSongAction } from \"@/pages/player/store/actionCreators\";\nimport { getPlayListDetail, getPlayListSongs } from \"@/services/playlist\";\nimport { getTopList } from \"@/services/toplist\";\nimport { getSizeImage } from \"@/utils/format-data\";\nimport { Tag } from \"antd\";\nimport React, { memo, useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport PlayList from \"@/components/play-list\";\nimport { TopListWrapper } from \"./style\";\nexport default memo(function TopList(props) {\n  const search = new URLSearchParams(props.location.search);\n  const id = parseInt(search.get(\"id\"));\n  const [playList, setPlaylist] = useState({ creator: {}, tags: [] });\n  const [songs, setSongs] = useState([]);\n  const history = useHistory();\n  const [topList, setTopList] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getTopList().then((res) => {\n      setTopList(res.list);\n    });\n  }, []);\n  useEffect(() => {\n    const paramsId = id ? id : 19723756;\n    getPlayListDetail(paramsId).then((res) => {\n      setPlaylist(res.playlist);\n      const ids = res.playlist.trackIds.map((item) => item.id);\n      getPlayListSongs(ids).then((res) => {\n        setSongs(res.songs);\n      });\n    });\n  }, [id]);\n  function playlistPlay(e) {\n    e.preventDefault();\n    if (songs.length) {\n      dispatch(changePlaylistAction(songs));\n      dispatch(getCurrentSongAction(songs[0].id));\n    }\n  }\n  const toplistClick = useCallback(\n    (id) => {\n      history.replace(\"/discover/toplist?id=\" + id);\n    },\n    [history]\n  );\n  return (\n    <TopListWrapper>\n      <div className=\"left\">\n        <h3 className=\"title\">云音乐特色榜</h3>\n        <ul className=\"toplist\">\n          {topList.slice(0, 4).map((item, index) => {\n            return (\n              <li\n                key={item.id}\n                className=\"item\"\n                style={{ backgroundColor: (id === item.id || (index === 0 && !id)) && \"#e6e6e6\" }}\n                onClick={(e) => {\n                  toplistClick(item.id);\n                }}\n              >\n                <div className=\"item-left\">\n                  <img src={getSizeImage(item.coverImgUrl, 40)} alt=\"\" />\n                </div>\n                <div className=\"item-right\">\n                  <div className=\"name\">{item.name}</div>\n                  <div>{item.updateFrequency}</div>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n        <h3 className=\"title\">全球媒体榜</h3>\n        <ul className=\"toplist\">\n          {topList.slice(4).map((item) => {\n            return (\n              <li\n                key={item.id}\n                className=\"item\"\n                onClick={(e) => {\n                  toplistClick(item.id);\n                }}\n                style={{ backgroundColor: id === item.id && \"#e6e6e6\" }}\n              >\n                <div className=\"item-left\">\n                  <img src={getSizeImage(item.coverImgUrl, 40)} alt=\"\" />\n                </div>\n                <div className=\"item-right\">\n                  <div className=\"name\">{item.name}</div>\n                  <div>{item.updateFrequency}</div>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <div className=\"right\">\n        <div className=\"top\">\n          <div className=\"img-wrap\">\n            <img src={getSizeImage(playList.coverImgUrl, 180)} alt=\"\" />\n          </div>\n          <div className=\"playlist-info\">\n            <div className=\"title\">\n              <i className=\"sprite_icon2\"></i>\n              <span>{playList.name}</span>\n            </div>\n            <div className=\"info\">\n              <a>\n                <img src={getSizeImage(playList.creator.avatarUrl, 40)} alt=\"\" />\n                <span>{playList.creator.nickname}</span>\n              </a>\n              <span className=\"time\">2019-12-26 创建</span>\n            </div>\n            <div className=\"btns\">\n              <a className=\"sprite_button play\" onClick={playlistPlay}>\n                <i className=\"sprite_button\"></i>\n                <span>播放</span>\n              </a>\n              <span className=\"add-icon sprite_button\">+</span>\n            </div>\n            <div className=\"tags\">\n              <span>标签: </span>\n              {playList.tags.map((item) => {\n                return <Tag key={item}>{item}</Tag>;\n              })}\n            </div>\n            <div>\n              <span>介绍: {playList.description}</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"play-list-wrap\">\n          <PlayList songs={songs} />\n        </div>\n      </div>\n    </TopListWrapper>\n  );\n});\n","import request from \"@/utils/request\";\n//排行榜\nexport const getTopList = () =>\n  request({\n    url: \"/toplist\",\n  });\n"],"sourceRoot":""}