{"version":3,"sources":["pages/search/style.js","pages/search/index.js"],"names":["SearchWrapper","styled","div","memo","location","useLocation","history","useHistory","search","URLSearchParams","keywords","get","type","useState","inputValue","setInputValue","songs","setSongs","artists","setArtists","useEffect","getSearch","then","res","result","justify","Search","size","style","width","onSearch","replace","onChange","e","target","value","activeKey","TabPane","tab","className","map","item","onClick","push","id","info"],"mappings":"qNACaA,E,MAAgBC,EAAOC,IAAV,gW,OCMXC,0BAAK,WAClB,IAAMC,EAAWC,cACXC,EAAUC,cACVC,EAAS,IAAIC,gBAAgBL,EAASI,QACtCE,EAAWF,EAAOG,IAAI,aAAe,qBACrCC,EAAOJ,EAAOG,IAAI,SAAW,IACnC,EAAoCE,mBAASH,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAeA,OAdAC,qBAAU,WACRL,EAAcL,KACb,CAACA,IACJU,qBAAU,WACRC,YAAU,CAAEX,WAAUE,SAAQU,MAAK,SAACC,GAClC,MAAqCA,EAAIC,OAAzC,IAAQR,aAAR,MAAgB,GAAhB,MAAoBE,eAApB,MAA8B,GAA9B,EACAD,EAASD,GACTG,EAAWD,QAEZ,CAACR,EAAUE,IAMZ,eAACZ,EAAD,WACE,cAAC,IAAD,CAAKyB,QAAQ,SAAb,SACE,cAAC,IAAMC,OAAP,CACEC,KAAK,QACLC,MAAO,CAAEC,MAAO,SAChBC,SATR,SAAkBpB,GAChBJ,EAAQyB,QAAQ,oBAAsBrB,EAAW,SAAWE,IAStDoB,SAAU,SAACC,GAAD,OAAOlB,EAAckB,EAAEC,OAAOC,QACxCA,MAAOrB,MAGX,eAAC,IAAD,CACEsB,UAAWxB,EACXoB,SAAU,SAACpB,GACTN,EAAQyB,QAAQ,oBAAsBrB,EAAW,SAAWE,IAHhE,UAME,cAAC,IAAKyB,QAAN,CAAsBC,IAAI,eAA1B,SACE,cAAC,IAAD,CAAUtB,MAAOA,KADD,KAGlB,cAAC,IAAKqB,QAAN,CAAwBC,IAAI,eAA5B,SACE,qBAAKC,UAAU,eAAf,SACGrB,EAAQsB,KAAI,SAACC,GACZ,OACE,qBAEEF,UAAU,eACVG,QAAS,SAACT,GACR3B,EAAQqC,KAAK,cAAgBF,EAAKG,KAJtC,SAOE,cAAC,IAAD,CAAaC,KAAMJ,KANdA,EAAKG,UALF","file":"static/js/10.f772a29f.chunk.js","sourcesContent":["import styled from \"styled-components\";\nexport const SearchWrapper = styled.div`\n  padding: 40px;\n  width: 900px;\n  margin: 0 auto;\n  .artists-list {\n    display: flex;\n    flex-wrap: wrap;\n    .artists-item {\n      width: 20%;\n      display: flex;\n      justify-content: center;\n      margin-bottom: 20px;\n      cursor: pointer;\n      img {\n        border-radius: 3px;\n      }\n    }\n  }\n`;\n","import ArtistCover from \"@/components/artist-cover\";\nimport PlayList from \"@/components/play-list\";\nimport { getSearch } from \"@/services/search\";\nimport { Input, Row, Tabs } from \"antd\";\nimport React, { memo, useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { SearchWrapper } from \"./style\";\nexport default memo(function Search() {\n  const location = useLocation();\n  const history = useHistory();\n  const search = new URLSearchParams(location.search);\n  const keywords = search.get(\"keywords\") || \"周杰伦\";\n  const type = search.get(\"type\") || \"1\";\n  const [inputValue, setInputValue] = useState(keywords);\n  const [songs, setSongs] = useState([]);\n  const [artists, setArtists] = useState([]);\n  useEffect(() => {\n    setInputValue(keywords);\n  }, [keywords]);\n  useEffect(() => {\n    getSearch({ keywords, type }).then((res) => {\n      const { songs = [], artists = [] } = res.result;\n      setSongs(songs);\n      setArtists(artists);\n    });\n  }, [keywords, type]);\n\n  function onSearch(keywords) {\n    history.replace(\"/search?keywords=\" + keywords + \"&type=\" + type);\n  }\n  return (\n    <SearchWrapper>\n      <Row justify=\"center\">\n        <Input.Search\n          size=\"large\"\n          style={{ width: \"400px\" }}\n          onSearch={onSearch}\n          onChange={(e) => setInputValue(e.target.value)}\n          value={inputValue}\n        />\n      </Row>\n      <Tabs\n        activeKey={type}\n        onChange={(type) => {\n          history.replace(\"/search?keywords=\" + keywords + \"&type=\" + type);\n        }}\n      >\n        <Tabs.TabPane key=\"1\" tab=\"歌曲\">\n          <PlayList songs={songs} />\n        </Tabs.TabPane>\n        <Tabs.TabPane key=\"100\" tab=\"歌手\">\n          <div className=\"artists-list\">\n            {artists.map((item) => {\n              return (\n                <div\n                  key={item.id}\n                  className=\"artists-item\"\n                  onClick={(e) => {\n                    history.push(\"/artist?id=\" + item.id);\n                  }}\n                >\n                  <ArtistCover info={item} />\n                </div>\n              );\n            })}\n          </div>\n        </Tabs.TabPane>\n      </Tabs>\n    </SearchWrapper>\n  );\n});\n"],"sourceRoot":""}