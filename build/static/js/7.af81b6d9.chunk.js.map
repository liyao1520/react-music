{"version":3,"sources":["services/playlist.js","components/download/style.js","components/download/index.js","components/songs-cover/style.js","components/songs-cover/index.js","pages/discover/c-pages/recommend/style.js","pages/discover/c-pages/recommend/store/actionCreators.js","services/recommend.js","pages/discover/c-pages/recommend/c-cpns/top-banner/style.js","pages/discover/c-pages/recommend/c-cpns/top-banner/index.js","components/recommend-header/style.js","components/recommend-header/index.js","pages/discover/c-pages/recommend/c-cpns/hot-recommend/style.js","pages/discover/c-pages/recommend/c-cpns/hot-recommend/index.js","components/album-cover/style.js","components/album-cover/index.js","pages/discover/c-pages/recommend/c-cpns/new-album/style.js","pages/discover/c-pages/recommend/c-cpns/new-album/index.js","components/top-ranking/style.js","components/top-ranking/index.js","pages/discover/c-pages/recommend/c-cpns/top-list/style.js","pages/discover/c-pages/recommend/c-cpns/top-list/index.js","pages/discover/c-pages/recommend/index.js"],"names":["getPlayListDetail","id","request","url","params","getPlayListSongs","ids","join","getPlayList","getPlayListCatlist","getRelatedPlayList","getSimiPlayList","DownloadWrapper","styled","div","memo","className","SongsCoverWrapper","props","info","history","useHistory","onClick","e","push","src","getSizeImage","picUrl","coverImgUrl","alt","getCount","playCount","name","creator","nickname","ContentWrapper","getTopBannerAction","dispatch","then","res","type","actionTypes","topBanners","banners","changeTopBannerAction","getHotRecommendsAction","limit","getHotRecommends","hotRecommends","result","changeHotRecommendAction","getNewAlbumsActions","getNewAlbum","newAlbums","albums","changeNewAlbumsAction","getTopListAction","idx","getToplist","newRanking","playlist","changeNewRankingAction","originRanking","changeOriginRankingAction","upRanking","changeUpRankingAction","TopBannerWrapper","bgImage","TopBanner","useState","currentIndex","setCurrentIndex","getBanners","useEffect","bannerRef","useRef","bannerChange","useCallback","form","to","imageUrl","effect","autoplay","dotPosition","ref","autoplaySpeed","beforeChange","speed","map","item","href","targetId","current","prev","next","connect","state","getIn","RecommendHeaderWrapper","Header","title","keywords","titlePath","hideMore","moreLink","index","link","length","defaultProps","HotRecommentWrapper","useDispatch","useSelector","get","shallowEqual","playListId","AlbumCoverWrapper","artist","NewAlbumWrapper","carouselRef","i","slice","TopRankingWrapper","tracks","preventDefault","trackIds","songs","changePlaylistAction","getCurrentSongAction","TopListWrapper"],"mappings":"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","file":"static/js/7.af81b6d9.chunk.js","sourcesContent":["import request from \"@/utils/request\";\n\nexport const getPlayListDetail = (id) =>\n  request({\n    url: \"/playlist/detail\",\n    params: {\n      id,\n    },\n  });\n\nexport const getPlayListSongs = (ids) =>\n  request({\n    url: \"/song/detail\",\n    params: {\n      ids: ids.join(\",\"),\n    },\n  });\nexport const getPlayList = (params) =>\n  request({\n    url: \"/top/playlist\",\n    params: params,\n  });\n//歌单分类\nexport const getPlayListCatlist = () =>\n  request({\n    url: \"/playlist/catlist\",\n  });\nexport const getRelatedPlayList = (id) =>\n  request({\n    url: \"/related/playlist\",\n    params: { id },\n  });\nexport const getSimiPlayList = (id) =>\n  request({\n    url: \"/simi/playlist\",\n    params: { id },\n  });\n","import styled from \"styled-components\";\nexport const DownloadWrapper = styled.div`\n  width: 200px;\n  .header {\n    height: 23px;\n    margin-bottom: 20px;\n    border-bottom: 1px solid #ccc;\n    color: #333;\n    font-weight: 700;\n  }\n  .content {\n    height: 77px;\n    margin-bottom: 10px;\n    background-position: 0 -392px;\n    padding-top: 64px;\n  }\n`;\n","import React, { memo } from \"react\";\nimport { DownloadWrapper } from \"./style\";\nexport default memo(function Download() {\n  return (\n    <DownloadWrapper>\n      <div className=\"header\">网易云音乐多端下载</div>\n      <div className=\"content download_sprite\">同步歌单，随时畅听320k好音乐</div>\n    </DownloadWrapper>\n  );\n});\n","import styled from \"styled-components\";\nexport const SongsCoverWrapper = styled.div`\n  width: 140px;\n  height: 204px;\n  cursor: pointer;\n\n  .img-wrap {\n    position: relative;\n    width: 100%;\n    height: 140px;\n    .bottom {\n      position: absolute;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      background-color: rgba(0, 0, 0, 0.7);\n      cursor: auto;\n      line-height: 27px;\n      width: 100%;\n      bottom: 0;\n      left: 0;\n      height: 27px;\n      background-color: rgba(0, 0, 0, 0.5);\n      padding: 0 10px;\n      color: #ccc;\n      .b-left {\n        display: flex;\n        align-items: center;\n        .icon-music {\n          background-position: 0 -24px;\n          width: 14px;\n          height: 11px;\n          margin-right: 8px;\n        }\n      }\n\n      .icon-play {\n        background-position: 0 -60px;\n        width: 16px;\n        height: 17px;\n      }\n    }\n    img {\n      width: 100%;\n      height: 100%;\n    }\n  }\n  .title {\n    margin: 8px 0 3px;\n    font-size: 14px;\n  }\n`;\n","import React, { memo } from \"react\";\nimport { SongsCoverWrapper } from \"./style\";\nimport { getCount, getSizeImage } from \"@/utils/format-data\";\nimport { useHistory } from \"react-router-dom\";\nexport default memo(function SongsCover(props) {\n  const { info } = props;\n\n  const history = useHistory();\n  function songClick() {\n    if (info.id) {\n      history.push(\"/playlist?id=\" + info.id);\n    }\n  }\n  return (\n    <SongsCoverWrapper\n      onClick={(e) => {\n        songClick();\n      }}\n    >\n      <div className=\"img-wrap\">\n        <img src={getSizeImage(info.picUrl ? info.picUrl : info.coverImgUrl, 140)} alt=\"\" />\n        <div className=\"bottom\">\n          <div className=\"b-left\">\n            <div className=\"icon-music sprite_icon\"></div>\n            <div className=\"count\">{getCount(info.playCount)}</div>\n          </div>\n          <div className=\"icon-play sprite_icon\"></div>\n        </div>\n      </div>\n      <div className=\"title text-nowrap\">{info.name}</div>\n      <div className=\"singer text-nowrap\">{info.creator && info.creator.nickname}</div>\n    </SongsCoverWrapper>\n  );\n});\n","import styled from \"styled-components\";\n\nexport const ContentWrapper = styled.div`\n  display: flex;\n  padding: 20px 20px 40px;\n  border: 1px solid #ccc;\n  border-bottom: 0;\n  background-color: #fff;\n  .left {\n    width: 689px;\n  }\n  .right {\n    width: 251px;\n    padding: 20px 40px 40px 30px;\n  }\n`;\n","import * as actionTypes from \"./constants\";\n\nimport { getHotRecommends, getNewAlbum, getTopBanners, getToplist } from \"@/services/recommend\";\n\nconst changeTopBannerAction = (res) => ({\n  type: actionTypes.CHANGE_TOP_BANNERS,\n  topBanners: res.banners,\n});\nconst changeHotRecommendAction = (res) => ({\n  type: actionTypes.CHANGE_HOT_RECOMMENDS,\n  hotRecommends: res.result,\n});\nconst changeNewAlbumsAction = (res) => ({\n  type: actionTypes.CHANGE_NEW_ALBUMS,\n  newAlbums: res.albums,\n});\n\nconst changeNewRankingAction = (res) => ({\n  type: actionTypes.CHANGE_NEW_RANKING,\n  newRanking: res.playlist,\n});\nconst changeUpRankingAction = (res) => ({\n  type: actionTypes.CHANGE_UP_RANKING,\n  upRanking: res.playlist,\n});\nconst changeOriginRankingAction = (res) => ({\n  type: actionTypes.CHANGE_ORIGIN_RANKING,\n  originRanking: res.playlist,\n});\n//异步请求\n/**\n * redux-thunk 异步需要dispath一个action函数\n * 这个action函数接收一个dispatch函数\n * 这里函数中返回一个action函数是为了更好的接收其他的参数\n */\nexport const getTopBannerAction = () => {\n  return (dispatch) => {\n    getTopBanners().then((res) => {\n      dispatch(changeTopBannerAction(res));\n    });\n  };\n};\n\nexport const getHotRecommendsAction = (limit) => {\n  return (dispatch) => {\n    getHotRecommends(limit).then((res) => {\n      dispatch(changeHotRecommendAction(res));\n    });\n  };\n};\nexport const getNewAlbumsActions = (limit) => {\n  return (dispatch) => {\n    getNewAlbum(limit).then((res) => {\n      dispatch(changeNewAlbumsAction(res));\n    });\n  };\n};\nexport const getTopListAction = (idx) => {\n  return (dispatch) => {\n    getToplist(idx).then((res) => {\n      switch (idx) {\n        case 0:\n          dispatch(changeNewRankingAction(res));\n          break;\n        case 2:\n          dispatch(changeOriginRankingAction(res));\n          break;\n        case 3:\n          dispatch(changeUpRankingAction(res));\n          break;\n        default:\n          return;\n      }\n    });\n  };\n};\n","import request from \"@/utils/request\";\n\nexport const getTopBanners = () =>\n  request({\n    url: \"/banner\",\n  });\n\nexport const getHotRecommends = (limit = 8) =>\n  request({\n    url: \"/personalized\",\n    params: {\n      limit,\n    },\n  });\nexport const getNewAlbum = (limit) =>\n  request({\n    url: \"/top/album\",\n    params: {\n      limit,\n    },\n  });\nexport const getToplist = (idx) =>\n  request({\n    url: \"/top/list\",\n    params: {\n      idx,\n    },\n  });\n","import styled from \"styled-components\";\nexport const TopBannerWrapper = styled.div`\n  background: url(${(props) => props.bgImage}) center center/6000px;\n  transition: 0.9s;\n  .wrap-v2 {\n    display: flex;\n    position: relative;\n  }\n  .carousel {\n    width: 730px;\n    height: 285px;\n    img {\n      width: 730px;\n      height: 285px;\n    }\n  }\n  .download {\n    width: 254px;\n    height: 285px;\n    background: url(https://s2.music.126.net/style/web2/img/index/download.png?a2f00738134d3f9a2049446d6b41b533)\n      no-repeat 0 0;\n  }\n  .btn-left,\n  .btn-right {\n    position: absolute;\n    width: 37px;\n    height: 63px;\n    top: 50%;\n    cursor: pointer;\n    transition: 0.2s;\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.3);\n    }\n  }\n  .btn-left {\n    left: -68px;\n    background-position: 0 -360px;\n  }\n  .btn-right {\n    right: -68px;\n    background-position: 0 -508px;\n  }\n`;\n","import { Carousel } from \"antd\";\nimport React, { memo, useCallback, useEffect, useRef, useState } from \"react\";\nimport { getTopBannerAction } from \"../../store/actionCreators\";\nimport { TopBannerWrapper } from \"./style\";\nimport { connect } from \"react-redux\";\nfunction TopBanner(props) {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const { getBanners, topBanners } = props;\n  useEffect(() => {\n    getBanners();\n  }, [getBanners]);\n\n  //轮播ref\n  const bannerRef = useRef();\n\n  const bannerChange = useCallback((form, to) => {\n    setCurrentIndex(to);\n  }, []);\n\n  //其他业务逻辑\n\n  const bgImage = topBanners[currentIndex] && topBanners[currentIndex].imageUrl + \"?imageView&blur=40x20\";\n\n  return (\n    <TopBannerWrapper bgImage={bgImage}>\n      <div className=\"wrap-v2\">\n        <Carousel\n          effect=\"fade\"\n          autoplay\n          dotPosition=\"bottom\"\n          className=\"carousel\"\n          ref={bannerRef}\n          autoplaySpeed={5000}\n          beforeChange={bannerChange}\n          speed={900}\n        >\n          {topBanners.map((item) => {\n            return (\n              <div key={item.targetId}>\n                <a href={item.url}>\n                  <img src={item.imageUrl} alt=\"\" />\n                </a>\n              </div>\n            );\n          })}\n        </Carousel>\n        <div className=\"download\"></div>\n        <div className=\"btn-left banner_sprite\" onClick={(e) => bannerRef.current.prev()}></div>\n        <div className=\"btn-right banner_sprite\" onClick={(e) => bannerRef.current.next()}></div>\n      </div>\n    </TopBannerWrapper>\n  );\n}\nconst mapStateToProps = (state) => ({\n  topBanners: state.getIn([\"recommend\", \"topBanners\"]),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getBanners() {\n    dispatch(getTopBannerAction());\n  },\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(TopBanner));\n","import styled from \"styled-components\";\nexport const RecommendHeaderWrapper = styled.div`\n  height: 33px;\n  background-position: -225px -156px;\n  border-bottom: 2px solid #c10d0c;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  .header-left {\n    display: flex;\n    align-items: center;\n    .title {\n      font-size: 20px;\n      font-weight: normal;\n      line-height: 28px;\n      margin-right: 20px;\n      background-position: -225px -156px;\n      padding-left: 34px;\n      a {\n        text-decoration: none;\n      }\n    }\n    .divider {\n      margin: 0 10px;\n      color: #ccc;\n    }\n  }\n  .header-right {\n    i {\n      display: inline-block;\n      background-position: 0 -240px;\n      width: 12px;\n      height: 12px;\n      margin-left: 4px;\n      vertical-align: middle;\n    }\n  }\n`;\n","import React, { memo } from \"react\";\nimport { RecommendHeaderWrapper } from \"./style\";\nimport propTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\nconst Header = memo(function Header(props) {\n  const { title, keywords, titlePath, hideMore, moreLink = \"/\" } = props;\n  return (\n    <RecommendHeaderWrapper>\n      <div className=\"header-left\">\n        <h3 className=\"title sprite_02\">\n          <a href={titlePath}>{title}</a>\n        </h3>\n        {keywords.map((item, index) => {\n          return (\n            <div className=\"item\" key={item.name}>\n              <NavLink to={item.link}>{item.name}</NavLink>\n              {index !== keywords.length - 1 && <span className=\"divider\">|</span>}\n            </div>\n          );\n        })}\n      </div>\n      {!hideMore && (\n        <div className=\"header-right\">\n          <NavLink to={moreLink}>更多</NavLink>\n          <i className=\"sprite_02\"></i>\n        </div>\n      )}\n    </RecommendHeaderWrapper>\n  );\n});\nHeader.propTypes = {\n  title: propTypes.string.isRequired,\n  keywords: propTypes.array,\n  titlePath: propTypes.string,\n  hideMore: propTypes.bool,\n};\nHeader.defaultProps = {\n  keywords: [],\n  hideMore: false,\n};\nexport default Header;\n","import styled from \"styled-components\";\nexport const HotRecommentWrapper = styled.div`\n  .hot-list {\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 20px;\n    .item {\n      width: 25%;\n      display: flex;\n      justify-content: center;\n    }\n  }\n`;\n","import React, { memo, useEffect } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\n\nimport RecommendHeader from \"@/components/recommend-header\";\nimport SongsCover from \"@/components/songs-cover\";\n\nimport { getHotRecommendsAction } from \"../../store/actionCreators\";\n\nimport { HotRecommentWrapper } from \"./style\";\nexport default memo(function HotRecomment() {\n  const dispatch = useDispatch();\n  const { hotRecommends } = useSelector(\n    (state) => ({\n      hotRecommends: state.get(\"recommend\").get(\"hotRecommends\"),\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    dispatch(getHotRecommendsAction());\n  }, [dispatch]);\n  const keywords = [\n    {\n      name: \"华语\",\n      link: \"/discover/playlist?cat=华语\",\n    },\n    {\n      name: \"流行\",\n      link: \"/discover/playlist?cat=流行\",\n    },\n    {\n      name: \"摇滚\",\n      link: \"/discover/playlist?cat=摇滚\",\n    },\n    {\n      name: \"民谣\",\n      link: \"/discover/playlist?cat=民谣\",\n    },\n    {\n      name: \"电子\",\n      link: \"/discover/playlist?cat=电子\",\n    },\n  ];\n  return (\n    <HotRecommentWrapper>\n      <RecommendHeader title=\"热门推荐\" keywords={keywords} moreLink=\"/discover/playlist\"></RecommendHeader>\n      <div className=\"hot-list\">\n        {hotRecommends.map((item, index) => {\n          return (\n            <div className=\"item\" key={item.id}>\n              <SongsCover info={item} className=\"item\" playListId={item.id}></SongsCover>\n            </div>\n          );\n        })}\n      </div>\n    </HotRecommentWrapper>\n  );\n});\n","import styled from \"styled-components\";\nexport const AlbumCoverWrapper = styled.div`\n  width: 118px;\n\n  display: flex;\n  flex-direction: column;\n  font-size: 12px;\n\n  .img-wrap {\n    position: relative;\n    display: flex;\n    justify-content: center;\n    cursor: pointer;\n    &:hover .icon-play {\n      opacity: 1;\n    }\n    img {\n      width: 100px;\n      height: 100px;\n    }\n    .msk {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 118px;\n      height: 100px;\n      background-position: 0 -570px;\n      z-index: 1;\n    }\n    .icon-play {\n      position: absolute;\n      opacity: 0;\n      left: 72px;\n      bottom: 10px;\n      width: 22px;\n      height: 22px;\n      z-index: 2;\n\n      transition: 0.2s opacity;\n    }\n  }\n  .song-name {\n    color: #000;\n    padding: 0 9px;\n  }\n  .singer {\n    color: #666;\n    padding: 0 9px;\n  }\n`;\n","import React, { memo } from \"react\";\nimport { getSizeImage } from \"@/utils/format-data\";\n\nimport { AlbumCoverWrapper } from \"./style\";\nexport default memo(function AlbumCover(props) {\n  const { info } = props;\n  return (\n    <AlbumCoverWrapper>\n      <a  className=\"img-wrap\">\n        <img src={getSizeImage(info.picUrl, 100)} alt=\"\" />\n        <div className=\"msk sprite_covor\"></div>\n        <div className=\"icon-play icon_play\"></div>\n      </a>\n      <a  className=\"song-name text-nowrap\">\n        {info.name}\n      </a>\n      <a  className=\"singer text-nowrap\">\n        {info.artist.name}\n      </a>\n    </AlbumCoverWrapper>\n  );\n});\n","import styled from \"styled-components\";\nexport const NewAlbumWrapper = styled.div`\n  .album-carousel-wrap {\n    position: relative;\n    height: 184px;\n    padding: 0 16px;\n    background: #f5f5f5;\n    margin: 20px 0 37px;\n    border: 1px solid #d3d3d3;\n    .page {\n      display: flex !important;\n      align-items: center;\n      justify-content: space-around;\n      height: 184px;\n    }\n    .icon-next,\n    .icon-prev {\n      position: absolute;\n      width: 17px;\n      height: 17px;\n      top: 71px;\n      cursor: pointer;\n    }\n    .icon-prev {\n      background-position: -280px -75px;\n      left: 4px;\n    }\n    .icon-next {\n      background-position: -300px -75px;\n      right: 4px;\n    }\n  }\n`;\n","import React, { memo, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport RecommendHeader from \"@/components/recommend-header\";\nimport AlbumCover from \"@/components/album-cover\";\nimport { NewAlbumWrapper } from \"./style\";\n\nimport { getNewAlbumsActions } from \"../../store/actionCreators\";\nimport { Carousel } from \"antd\";\n\nexport default memo(function PersonalizedRecommned(props) {\n  const dispatch = useDispatch();\n  const { newAlbums } = useSelector((state) => ({\n    newAlbums: state.getIn([\"recommend\", \"newAlbums\"]),\n  }));\n\n  useEffect(() => {\n    dispatch(getNewAlbumsActions(10));\n  }, [dispatch]);\n\n  const carouselRef = useRef();\n  return (\n    <NewAlbumWrapper>\n      <RecommendHeader title=\"新碟上架\" hideMore />\n      <div className=\"album-carousel-wrap\">\n        <div className=\"icon-prev sprite_02\" onClick={(e) => carouselRef.current.prev()}></div>\n        <div className=\"icon-next sprite_02\" onClick={(e) => carouselRef.current.next()}></div>\n        <Carousel className=\"carousel\" ref={carouselRef}>\n          {[0, 1].map((i) => {\n            return (\n              <div key={i} className=\"page\">\n                {newAlbums.slice(i * 5, (i + 1) * 5).map((item) => {\n                  return (\n                    <AlbumCover info={item} key={item.id}>\n                      {item.name}\n                    </AlbumCover>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </Carousel>\n      </div>\n    </NewAlbumWrapper>\n  );\n});\n","import styled from \"styled-components\";\nexport const TopRankingWrapper = styled.div`\n  width: 230px;\n  display: flex;\n  flex-direction: column;\n  .header {\n    display: flex;\n    padding: 20px;\n    .img-wrap {\n      width: 80px;\n      height: 80px;\n      img {\n        width: 100%;\n        height: 100%;\n      }\n    }\n    .name {\n      margin-left: 10px;\n      padding-top: 10px;\n      h3 {\n        font-size: 14px;\n        font-weight: 700;\n        color: #333;\n        margin-bottom: 10px;\n      }\n      .btn {\n        a {\n          display: inline-block;\n          text-indent: -99999px;\n          width: 22px;\n          height: 22px;\n          margin-right: 10px;\n        }\n        .play {\n          background-position: -267px -205px;\n        }\n        .collect {\n          background-position: -300px -205px;\n        }\n      }\n    }\n  }\n  .list {\n    display: flex;\n    flex-direction: column;\n    .item {\n      display: flex;\n      height: 32px;\n      align-items: center;\n      padding-left: 10px;\n      .name {\n        color: #000;\n        width: 170px;\n      }\n      .index {\n        font-size: 16px;\n        width: 35px;\n        text-align: center;\n      }\n      &:hover .btn {\n        opacity: 1;\n      }\n      .btn {\n        opacity: 0;\n        display: flex;\n        transition: 0.2s;\n        a {\n          display: inline-block;\n          text-indent: -9999px;\n          width: 17px;\n          height: 17px;\n          margin-right: 10px;\n        }\n        .collect {\n          background-position: -297px -268px;\n        }\n        .add {\n          background-position: 0 -700px;\n          margin: 2px 6px 0 0;\n        }\n        .play {\n          background-position: -267px -268px;\n        }\n      }\n    }\n  }\n  .footer {\n    text-align: right;\n    height: 32px;\n    line-height: 32px;\n    margin-right: 20px;\n  }\n`;\n","import React, { memo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getSizeImage } from \"@/utils/format-data\";\nimport { TopRankingWrapper } from \"./style\";\nimport { NavLink } from \"react-router-dom\";\nimport { changePlaylistAction, getCurrentSongAction } from \"@/pages/player/store/actionCreators\";\nimport { getPlayListSongs } from \"@/services/playlist\";\nexport default memo(function TopRanking(props) {\n  const { info } = props;\n  const { tracks = [] } = info;\n  const dispatch = useDispatch();\n  function playMusic(id) {\n    dispatch(getCurrentSongAction(id));\n  }\n  function playPlayList(e) {\n    e.preventDefault();\n    getPlayListSongs(info.trackIds.map((item) => item.id)).then((res) => {\n      const songs = res.songs;\n      dispatch(changePlaylistAction(songs));\n      dispatch(getCurrentSongAction(songs[0].id));\n    });\n    dispatch(changePlaylistAction());\n  }\n  return (\n    <TopRankingWrapper>\n      <div className=\"header\">\n        <div className=\"img-wrap\">\n          <img src={getSizeImage(info.coverImgUrl, 100)} alt=\"\" />\n        </div>\n        <div className=\"name\">\n          <NavLink to={\"/discover/toplist?id=\" + info.id}>\n            <h3>{info.name}</h3>\n          </NavLink>\n\n          <div className=\"btn\">\n            <a className=\"sprite_02 play\" onClick={playPlayList}>\n              播放\n            </a>\n            <a className=\"sprite_02 collect\">收藏</a>\n          </div>\n        </div>\n      </div>\n      <div className=\"list\">\n        {tracks.slice(0, 10).map((item, index) => {\n          return (\n            <div key={item.id} className=\"item\">\n              <div className=\"index\">{index + 1}</div>\n              <div className=\"name text-nowrap\">\n                <NavLink to={\"/song?id=\" + item.id}>{item.name}</NavLink>\n              </div>\n              <div className=\"btn\">\n                <a\n                  className=\"sprite_02 play\"\n                  onClick={(e) => {\n                    playMusic(item.id);\n                  }}\n                >\n                  播放\n                </a>\n                <a className=\"sprite_icon2 add\">添加到播放列表</a>\n                <a className=\"sprite_02 collect\">收藏</a>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"footer\">\n        <NavLink to={\"/discover/toplist?id=\" + info.id}>查看全部 &gt;</NavLink>\n      </div>\n    </TopRankingWrapper>\n  );\n});\n","import styled from \"styled-components\";\nexport const TopListWrapper = styled.div`\n  .top-list-wrap {\n    height: 472px;\n    display: flex;\n  }\n`;\n","import React, { memo, useEffect } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { getTopListAction } from \"../../store/actionCreators\";\n\nimport RecommendHeader from \"@/components/recommend-header\";\nimport TopRanking from \"@/components/top-ranking\";\nimport { TopListWrapper } from \"./style\";\nexport default memo(function TopList() {\n  const dispatch = useDispatch();\n  const { upRanking, originRanking, newRanking } = useSelector(\n    (state) => ({\n      upRanking: state.getIn([\"recommend\", \"upRanking\"]),\n      newRanking: state.getIn([\"recommend\", \"newRanking\"]),\n      originRanking: state.getIn([\"recommend\", \"originRanking\"]),\n    }),\n    shallowEqual\n  );\n  useEffect(() => {\n    dispatch(getTopListAction(0));\n    dispatch(getTopListAction(2));\n    dispatch(getTopListAction(3));\n  }, [dispatch]);\n  return (\n    <TopListWrapper>\n      <RecommendHeader title=\"榜单\" moreLink=\"/discover/toplist\" />\n      <div className=\"top-list-wrap recommend_top_bg\">\n        <TopRanking info={upRanking} />\n        <TopRanking info={newRanking} />\n        <TopRanking info={originRanking} />\n      </div>\n    </TopListWrapper>\n  );\n});\n","import React, { memo } from \"react\";\n\nimport { ContentWrapper } from \"./style\";\n\nimport TopBanner from \"./c-cpns/top-banner\";\nimport HotRecomment from \"./c-cpns/hot-recommend\";\nimport NewAlbum from \"./c-cpns/new-album\";\nimport TopList from \"./c-cpns/top-list\";\nimport Download from \"@/components/download\";\nexport default memo(function Recommend() {\n  return (\n    <div>\n      <TopBanner />\n      <ContentWrapper className=\"wrap-v2\">\n        <div className=\"left\">\n          <HotRecomment />\n          <NewAlbum />\n          <TopList />\n        </div>\n        <div className=\"right\">\n          <Download />\n        </div>\n      </ContentWrapper>\n    </div>\n  );\n});\n"],"sourceRoot":""}