{"version":3,"sources":["services/playlist.js","components/download/style.js","components/download/index.js","pages/discover/style.js","components/songs-cover-mini/style.js","components/songs-cover-mini/index.js","components/recommend-navbar/index.js","pages/play-list/style.js","pages/play-list/index.js"],"names":["getPlayListDetail","id","request","url","params","getPlayListSongs","ids","join","getPlayList","getPlayListCatlist","getRelatedPlayList","getSimiPlayList","DownloadWrapper","styled","div","memo","className","DiscoverWrapper","SongsCoverMiniWrapper","props","info","history","useHistory","playlistClick","push","onClick","e","src","getSizeImage","coverImgUrl","alt","name","creator","nickname","discoverMenu","map","item","to","path","exact","title","PlayListWrapper","URLSearchParams","location","search","get","useState","tags","playList","setPlaylist","relatedPlayList","setRelatedPlayList","songs","setSongs","dispatch","useDispatch","useEffect","then","res","playlist","trackIds","playlists","avatarUrl","href","preventDefault","length","changePlaylistAction","getCurrentSongAction","description"],"mappings":"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","file":"static/js/4.24727444.chunk.js","sourcesContent":["import request from \"@/utils/request\";\n\nexport const getPlayListDetail = (id) =>\n  request({\n    url: \"/playlist/detail\",\n    params: {\n      id,\n    },\n  });\n\nexport const getPlayListSongs = (ids) =>\n  request({\n    url: \"/song/detail\",\n    params: {\n      ids: ids.join(\",\"),\n    },\n  });\nexport const getPlayList = (params) =>\n  request({\n    url: \"/top/playlist\",\n    params: params,\n  });\n//歌单分类\nexport const getPlayListCatlist = () =>\n  request({\n    url: \"/playlist/catlist\",\n  });\nexport const getRelatedPlayList = (id) =>\n  request({\n    url: \"/related/playlist\",\n    params: { id },\n  });\nexport const getSimiPlayList = (id) =>\n  request({\n    url: \"/simi/playlist\",\n    params: { id },\n  });\n","import styled from \"styled-components\";\nexport const DownloadWrapper = styled.div`\n  width: 200px;\n  .header {\n    height: 23px;\n    margin-bottom: 20px;\n    border-bottom: 1px solid #ccc;\n    color: #333;\n    font-weight: 700;\n  }\n  .content {\n    height: 77px;\n    margin-bottom: 10px;\n    background-position: 0 -392px;\n    padding-top: 64px;\n  }\n`;\n","import React, { memo } from \"react\";\nimport { DownloadWrapper } from \"./style\";\nexport default memo(function Download() {\n  return (\n    <DownloadWrapper>\n      <div className=\"header\">网易云音乐多端下载</div>\n      <div className=\"content download_sprite\">同步歌单，随时畅听320k好音乐</div>\n    </DownloadWrapper>\n  );\n});\n","import styled from \"styled-components\";\n\nexport const DiscoverWrapper = styled.div`\n  height: 29px;\n  background-color: #c20c0c;\n  border-bottom: 1px solid #a40011;\n  .wrap-v1 {\n    height: 100%;\n  }\n  .nav-link {\n    display: flex;\n    height: 100%;\n    padding-left: 180px;\n    li {\n      height: 100%;\n      margin: 0 20px;\n      padding-top: 2px;\n      a {\n        width: 100%;\n        padding: 3px 13px;\n        color: #fff;\n        text-decoration: none;\n        border-radius: 10px;\n        &:hover {\n          background-color: rgba(0, 0, 0, 0.3);\n        }\n      }\n      .active {\n        background-color: rgba(0, 0, 0, 0.3);\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\nexport const SongsCoverMiniWrapper = styled.div`\n  display: flex;\n  width: 200px;\n  height: 50px;\n  margin-bottom: 15px;\n  line-height: 24px;\n  .playlist-left {\n    width: 50px;\n    height: 50px;\n    cursor: pointer;\n    img {\n      width: 100%;\n      height: 100%;\n    }\n  }\n  .playlist-right {\n    margin-left: 10px;\n    .name {\n      width: 140px;\n      a {\n        color: #000;\n        font-size: 14px;\n      }\n    }\n    .creator {\n      .nickname {\n        margin-left: 5px;\n      }\n    }\n  }\n`;\n","import { getSizeImage } from \"@/utils/format-data\";\nimport React, { memo } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { SongsCoverMiniWrapper } from \"./style\";\nexport default memo(function SongsCoverMini(props) {\n  const { info } = props;\n\n  const history = useHistory();\n  function playlistClick(id) {\n    history.push(\"/playlist?id=\" + id);\n  }\n  return (\n    <SongsCoverMiniWrapper>\n      <div\n        className=\"playlist-left\"\n        onClick={(e) => {\n          playlistClick(info.id);\n        }}\n      >\n        <img src={getSizeImage(info.coverImgUrl, 50)} alt=\"\" />\n      </div>\n      <div className=\"playlist-right\">\n        <div className=\"name text-nowrap\">\n          <a\n            onClick={(e) => {\n              playlistClick(info.id);\n            }}\n          >\n            {info.name}\n          </a>\n        </div>\n        <div className=\"creator\">\n          <span>by</span>\n          <span className=\"nickname\">{info.creator && info.creator.nickname}</span>\n        </div>\n      </div>\n    </SongsCoverMiniWrapper>\n  );\n});\n","import React, { memo } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { discoverMenu } from \"@/common/local-data\";\nimport { DiscoverWrapper } from \"@/pages/discover/style\";\nexport default memo(function NavBar() {\n  return (\n    <DiscoverWrapper>\n      <div className=\"wrap-v1\">\n        <ul className=\"nav-link\">\n          {discoverMenu.map((item) => {\n            return (\n              <li key={item.title}>\n                <NavLink to={item.path} exact>\n                  {item.title}\n                </NavLink>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </DiscoverWrapper>\n  );\n});\n","import styled from \"styled-components\";\nexport const PlayListWrapper = styled.div`\n  width: 980px;\n  margin: 0 auto;\n  display: flex;\n  border: 1px solid #ccc;\n  background-color: #fff;\n  .left {\n    width: 709px;\n    .play-list-wrap {\n      margin-top: 40px;\n    }\n    .top {\n      display: flex;\n    }\n    padding: 47px 30px 40px 39px;\n    .img-wrap {\n      width: 190px;\n      height: 190px;\n      img {\n        width: 100%;\n        height: 100%;\n      }\n    }\n    .playlist-info {\n      flex: 1;\n      margin-left: 20px;\n\n      .title {\n        font-size: 20px;\n        display: flex;\n        align-items: center;\n        margin-bottom: 10px;\n        i {\n          display: inline-block;\n          width: 54px;\n          height: 24px;\n          background-position: 0 -243px;\n          margin-right: 10px;\n        }\n      }\n      .info {\n        display: flex;\n        align-items: center;\n        a {\n          margin-right: 15px;\n          color: #0c73c2;\n        }\n        img {\n          width: 35px;\n          height: 35px;\n          margin-right: 10px;\n        }\n      }\n      .add-icon {\n        display: inline-block;\n        width: 31px;\n        height: 31px;\n        margin-left: -3px;\n        padding-right: 0;\n        background-position: 0 -1588px;\n        text-indent: -9999px;\n      }\n      .btns {\n        margin: 20px 0;\n        display: flex;\n        .play {\n          display: inline-flex;\n          justify-content: center;\n          align-items: center;\n          background-position: 0 -387px;\n          text-align: center;\n          width: 61px;\n          height: 31px;\n          color: #fff;\n          i {\n            display: inline-block;\n            width: 20px;\n            height: 18px;\n            margin: -2px 2px 0;\n            background-position: 0 -1622px;\n          }\n        }\n        .add-icon {\n          display: inline-block;\n          width: 31px;\n          height: 31px;\n          margin-left: -3px;\n          padding-right: 0;\n          background-position: 0 -1588px;\n          text-indent: -9999px;\n        }\n        .item {\n          display: inline-block;\n          height: 31px;\n          margin-right: 6px;\n          padding-right: 5px;\n          background-position: right -1020px;\n          display: flex;\n          align-items: center;\n        }\n        .comment-icon {\n          background-position: 0 -1465px;\n        }\n      }\n      .tags {\n      }\n    }\n  }\n  .right {\n    width: 270px;\n    border-left: 1px solid #ccc;\n    padding: 20px 40px 40px 30px;\n    .related-playList {\n      height: 23px;\n      margin-bottom: 20px;\n      border-bottom: 1px solid #ccc;\n      color: #333;\n      font-weight: 700;\n    }\n  }\n  .description {\n    max-height: 100px;\n    overflow-y: auto;\n    padding-right: 4px;\n    ::-webkit-scrollbar {\n      width: 8px;\n    }\n    ::-webkit-scrollbar-thumb {\n      background-color: rgba(0, 0, 0, 0.2);\n      border-radius: 5px;\n    }\n  }\n`;\n","import React, { memo, useEffect, useState } from \"react\";\nimport RecommendNavBar from \"@/components/recommend-navbar\";\nimport { getPlayListDetail, getPlayListSongs, getRelatedPlayList } from \"@/services/playlist\";\nimport { PlayListWrapper } from \"./style\";\nimport { Tag } from \"antd\";\n\nimport { getSizeImage } from \"@/utils/format-data\";\nimport PlayList from \"@/components/play-list\";\nimport { useDispatch } from \"react-redux\";\nimport { changePlaylistAction, getCurrentSongAction } from \"../player/store/actionCreators\";\nimport Download from \"@/components/download\";\nimport SongsCoverMini from \"@/components/songs-cover-mini\";\nexport default memo(function PlayListPage(props) {\n  const search = new URLSearchParams(props.location.search);\n  const id = search.get(\"id\");\n  const [playList, setPlaylist] = useState({ creator: {}, tags: [] });\n  const [relatedPlayList, setRelatedPlayList] = useState([]);\n  const [songs, setSongs] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getPlayListDetail(id).then((res) => {\n      setPlaylist(res.playlist);\n      const ids = res.playlist.trackIds.map((item) => item.id);\n      getPlayListSongs(ids).then((res) => {\n        if (res.songs) {\n          setSongs(res.songs);\n        }\n      });\n    });\n    getRelatedPlayList(id).then((res) => {\n      setRelatedPlayList(res.playlists);\n    });\n  }, [id]);\n  function playlistPlay(e) {\n    e.preventDefault();\n    if (songs.length) {\n      dispatch(changePlaylistAction(songs));\n      dispatch(getCurrentSongAction(songs[0].id));\n    }\n  }\n  return (\n    <div>\n      <RecommendNavBar />\n      <PlayListWrapper>\n        <div className=\"left\">\n          <div className=\"top\">\n            <div className=\"img-wrap\">\n              <img src={getSizeImage(playList.coverImgUrl, 180)} alt=\"\" />\n            </div>\n            <div className=\"playlist-info\">\n              <div className=\"title\">\n                <i className=\"sprite_icon2\"></i>\n                <span>{playList.name}</span>\n              </div>\n              <div className=\"info\">\n                <a>\n                  <img src={getSizeImage(playList.creator.avatarUrl, 40)} alt=\"\" />\n                  <span>{playList.creator.nickname}</span>\n                </a>\n                <span className=\"time\">2019-12-26 创建</span>\n              </div>\n              <div className=\"btns\">\n                <a href=\"\" className=\"sprite_button play\" onClick={playlistPlay}>\n                  <i className=\"sprite_button\"></i>\n                  <span>播放</span>\n                </a>\n                <span className=\"add-icon sprite_button\">+</span>\n              </div>\n              <div className=\"tags\">\n                <span>标签: </span>\n                {playList.tags.map((item) => {\n                  return <Tag key={item}>{item}</Tag>;\n                })}\n              </div>\n              <div className=\"description\">\n                <span>介绍: {playList.description}</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"play-list-wrap\">\n            <PlayList songs={songs} />\n          </div>\n        </div>\n        <div className=\"right\">\n          <div className=\"related-playList\">推荐歌单</div>\n          {relatedPlayList.map((item) => {\n            return <SongsCoverMini info={item} key={item.id} />;\n          })}\n          <Download />\n        </div>\n      </PlayListWrapper>\n    </div>\n  );\n});\n"],"sourceRoot":""}