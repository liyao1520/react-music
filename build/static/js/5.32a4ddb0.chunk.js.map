{"version":3,"sources":["services/playlist.js","components/download/style.js","components/download/index.js","pages/discover/style.js","components/songs-cover-mini/style.js","components/songs-cover-mini/index.js","components/recommend-navbar/index.js","assets/img/sprite_cover.png","pages/song/style.js","pages/song/index.js"],"names":["getPlayListDetail","id","request","url","params","getPlayListSongs","ids","join","getPlayList","getPlayListCatlist","getRelatedPlayList","getSimiPlayList","DownloadWrapper","styled","div","memo","className","DiscoverWrapper","SongsCoverMiniWrapper","props","info","history","useHistory","playlistClick","push","onClick","e","src","getSizeImage","coverImgUrl","alt","name","creator","nickname","discoverMenu","map","item","to","path","exact","title","SongWrapper","sprite_cover","URLSearchParams","location","search","get","useState","musicInfo","setMusicInfo","lyricList","setlyricList","playlists","setPlaylists","isopen","setIsOpen","dispatch","useDispatch","useEffect","getSongDetail","then","res","songs","alert","replace","getLyric","nolyric","lrc","parseLyric","lyric","Object","keys","length","al","picUrl","alia","ar","event","preventDefault","getCurrentSongAction","slice","content","time"],"mappings":"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","file":"static/js/5.32a4ddb0.chunk.js","sourcesContent":["import request from \"@/utils/request\";\n\nexport const getPlayListDetail = (id) =>\n  request({\n    url: \"/playlist/detail\",\n    params: {\n      id,\n    },\n  });\n\nexport const getPlayListSongs = (ids) =>\n  request({\n    url: \"/song/detail\",\n    params: {\n      ids: ids.join(\",\"),\n    },\n  });\nexport const getPlayList = (params) =>\n  request({\n    url: \"/top/playlist\",\n    params: params,\n  });\n//歌单分类\nexport const getPlayListCatlist = () =>\n  request({\n    url: \"/playlist/catlist\",\n  });\nexport const getRelatedPlayList = (id) =>\n  request({\n    url: \"/related/playlist\",\n    params: { id },\n  });\nexport const getSimiPlayList = (id) =>\n  request({\n    url: \"/simi/playlist\",\n    params: { id },\n  });\n","import styled from \"styled-components\";\nexport const DownloadWrapper = styled.div`\n  width: 200px;\n  .header {\n    height: 23px;\n    margin-bottom: 20px;\n    border-bottom: 1px solid #ccc;\n    color: #333;\n    font-weight: 700;\n  }\n  .content {\n    height: 77px;\n    margin-bottom: 10px;\n    background-position: 0 -392px;\n    padding-top: 64px;\n  }\n`;\n","import React, { memo } from \"react\";\nimport { DownloadWrapper } from \"./style\";\nexport default memo(function Download() {\n  return (\n    <DownloadWrapper>\n      <div className=\"header\">网易云音乐多端下载</div>\n      <div className=\"content download_sprite\">同步歌单，随时畅听320k好音乐</div>\n    </DownloadWrapper>\n  );\n});\n","import styled from \"styled-components\";\n\nexport const DiscoverWrapper = styled.div`\n  height: 29px;\n  background-color: #c20c0c;\n  border-bottom: 1px solid #a40011;\n  .wrap-v1 {\n    height: 100%;\n  }\n  .nav-link {\n    display: flex;\n    height: 100%;\n    padding-left: 180px;\n    li {\n      height: 100%;\n      margin: 0 20px;\n      padding-top: 2px;\n      a {\n        width: 100%;\n        padding: 3px 13px;\n        color: #fff;\n        text-decoration: none;\n        border-radius: 10px;\n        &:hover {\n          background-color: rgba(0, 0, 0, 0.3);\n        }\n      }\n      .active {\n        background-color: rgba(0, 0, 0, 0.3);\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\nexport const SongsCoverMiniWrapper = styled.div`\n  display: flex;\n  width: 200px;\n  height: 50px;\n  margin-bottom: 15px;\n  line-height: 24px;\n  .playlist-left {\n    width: 50px;\n    height: 50px;\n    cursor: pointer;\n    img {\n      width: 100%;\n      height: 100%;\n    }\n  }\n  .playlist-right {\n    margin-left: 10px;\n    .name {\n      width: 140px;\n      a {\n        color: #000;\n        font-size: 14px;\n      }\n    }\n    .creator {\n      .nickname {\n        margin-left: 5px;\n      }\n    }\n  }\n`;\n","import { getSizeImage } from \"@/utils/format-data\";\nimport React, { memo } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { SongsCoverMiniWrapper } from \"./style\";\nexport default memo(function SongsCoverMini(props) {\n  const { info } = props;\n\n  const history = useHistory();\n  function playlistClick(id) {\n    history.push(\"/playlist?id=\" + id);\n  }\n  return (\n    <SongsCoverMiniWrapper>\n      <div\n        className=\"playlist-left\"\n        onClick={(e) => {\n          playlistClick(info.id);\n        }}\n      >\n        <img src={getSizeImage(info.coverImgUrl, 50)} alt=\"\" />\n      </div>\n      <div className=\"playlist-right\">\n        <div className=\"name text-nowrap\">\n          <a\n            onClick={(e) => {\n              playlistClick(info.id);\n            }}\n          >\n            {info.name}\n          </a>\n        </div>\n        <div className=\"creator\">\n          <span>by</span>\n          <span className=\"nickname\">{info.creator && info.creator.nickname}</span>\n        </div>\n      </div>\n    </SongsCoverMiniWrapper>\n  );\n});\n","import React, { memo } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { discoverMenu } from \"@/common/local-data\";\nimport { DiscoverWrapper } from \"@/pages/discover/style\";\nexport default memo(function NavBar() {\n  return (\n    <DiscoverWrapper>\n      <div className=\"wrap-v1\">\n        <ul className=\"nav-link\">\n          {discoverMenu.map((item) => {\n            return (\n              <li key={item.title}>\n                <NavLink to={item.path} exact>\n                  {item.title}\n                </NavLink>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </DiscoverWrapper>\n  );\n});\n","export default __webpack_public_path__ + \"static/media/sprite_cover.741609ed.png\";","import styled from \"styled-components\";\nimport sprite_cover from \"@/assets/img/sprite_cover.png\";\nexport const SongWrapper = styled.div`\n  display: flex;\n  width: 980px;\n  border: 1px solid #ccc;\n  border-bottom: 0;\n  border-top: 0;\n  margin: 0 auto;\n  .music-info {\n    display: flex;\n  }\n  .left {\n    width: 709px;\n    padding: 47px 30px 40px 39px;\n\n    .cover {\n      width: 206px;\n\n      .img-wrap {\n        position: relative;\n        width: 206px;\n        height: 205px;\n        background: url(${sprite_cover}) no-repeat -140px -580px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        img {\n          position: absolute;\n          z-index: -1;\n          width: 130px;\n          height: 130px;\n        }\n      }\n    }\n    .music-content {\n      margin-left: 25px;\n      .header {\n        padding-left: 40px;\n        margin-bottom: 15px;\n        .music-name {\n          font-size: 24px;\n          color: #333;\n        }\n        .music-desc {\n          color: #bababa;\n          font-size: 14px;\n        }\n      }\n      .singer,\n      .album {\n        margin: 10px 0;\n        color: #999;\n        span {\n          margin-right: 4px;\n        }\n        a {\n          color: #0c73c2;\n        }\n      }\n      .btns {\n        margin-bottom: 20px;\n        display: flex;\n        .play {\n          display: inline-flex;\n          justify-content: center;\n          align-items: center;\n          background-position: 0 -387px;\n          text-align: center;\n          width: 61px;\n          height: 31px;\n          color: #fff;\n          i {\n            display: inline-block;\n            width: 20px;\n            height: 18px;\n            margin: -2px 2px 0;\n            background-position: 0 -1622px;\n          }\n        }\n        .add-icon {\n          display: inline-block;\n          width: 31px;\n          height: 31px;\n          margin-left: -3px;\n          padding-right: 0;\n          background-position: 0 -1588px;\n          text-indent: -9999px;\n        }\n        .item {\n          display: inline-block;\n          height: 31px;\n          margin-right: 6px;\n          padding-right: 5px;\n          background-position: right -1020px;\n          display: flex;\n          align-items: center;\n        }\n        .comment-icon {\n          background-position: 0 -1465px;\n        }\n      }\n      .lyric-content {\n        .open {\n          cursor: pointer;\n          color: #0c73c2;\n          &:hover {\n            text-decoration: underline;\n          }\n        }\n      }\n    }\n  }\n  .right {\n    padding: 20px 40px 40px 30px;\n    width: 270px;\n    border-left: 1px solid #ccc;\n    .related-playList {\n      height: 23px;\n      margin-bottom: 20px;\n      border-bottom: 1px solid #ccc;\n      color: #333;\n      font-weight: 700;\n    }\n  }\n`;\n","import React, { memo, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport RecommendNavBar from \"@/components/recommend-navbar\";\nimport { SongWrapper } from \"./style\";\nimport { getSongDetail } from \"@/services/player\";\nimport { getLyric } from \"@/services/song\";\nimport { getSizeImage } from \"@/utils/format-data\";\nimport { parseLyric } from \"@/utils/parse-lyric\";\nimport { getCurrentSongAction } from \"../player/store/actionCreators\";\nimport Download from \"@/components/download\";\nimport { getSimiPlayList } from \"@/services/playlist\";\nimport SongsCoverMini from \"@/components/songs-cover-mini\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default memo(function Song(props) {\n  const search = new URLSearchParams(props.location.search);\n  const id = search.get(\"id\");\n  const [musicInfo, setMusicInfo] = useState({});\n  const [lyricList, setlyricList] = useState([]);\n  const [playlists, setPlaylists] = useState([]);\n  const [isopen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  function playMusic(event) {\n    event.preventDefault();\n    dispatch(getCurrentSongAction(id));\n  }\n  useEffect(() => {\n    getSongDetail(id).then((res) => {\n      if (!res.songs[0]) {\n        alert(\"对不起您访问的网址有问题!\");\n        props.history.replace(\"/\");\n      } else {\n        setMusicInfo(res.songs[0]);\n      }\n    });\n    getLyric(id).then((res) => {\n      if (res.nolyric || !res.lrc) {\n        setlyricList([]);\n        return;\n      }\n      const lyricList = parseLyric(res.lrc.lyric);\n      setlyricList(lyricList);\n    });\n    getSimiPlayList(id).then((res) => {\n      setPlaylists(res.playlists);\n    });\n  }, [id, props.history]);\n  return (\n    Object.keys(musicInfo).length && (\n      <div>\n        <RecommendNavBar />\n        <SongWrapper>\n          <div className=\"left\">\n            <div className=\"music-info\">\n              <div className=\"cover\">\n                <div className=\"img-wrap\">\n                  <img src={getSizeImage(musicInfo.al.picUrl, 130)} alt=\"\" />\n                </div>\n              </div>\n              <div className=\"music-content\">\n                <div className=\"header\">\n                  <div className=\"music-name\">{musicInfo.name}</div>\n                  <div className=\"music-desc\">{musicInfo.alia[0]}</div>\n                </div>\n                <div className=\"singer\">\n                  <span>歌手:</span>\n                  <NavLink to={\"/artist?id=\" + musicInfo.ar[0].id}>{musicInfo.ar[0].name}</NavLink>\n                </div>\n                <div className=\"album\">\n                  <span>所属专辑:</span>\n                  <a>{musicInfo.al.name}</a>\n                </div>\n                <div className=\"btns\">\n                  <a className=\"sprite_button play\" onClick={playMusic}>\n                    <i className=\"sprite_button\"></i>\n                    <span>播放</span>\n                  </a>\n                  <span className=\"add-icon sprite_button\">+</span>\n                </div>\n                <div className=\"lyric-content\">\n                  {lyricList.length ? (\n                    <ul>\n                      {lyricList.slice(0, 15).map((item) => {\n                        return <li key={item.time}>{item.content}</li>;\n                      })}\n                      {isopen &&\n                        lyricList.slice(15).map((item) => {\n                          return <li key={item.time}>{item.content}</li>;\n                        })}\n                      <i>\n                        <span className=\"open\" onClick={(e) => setIsOpen(!isopen)}>\n                          {isopen ? \"收起\" : \"展开\"}\n                        </span>\n                        <span>{isopen ? \"👆\" : \"👇\"}</span>\n                      </i>\n                    </ul>\n                  ) : (\n                    <p>~无歌词~</p>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"right\">\n            <div className=\"related-playList\">包含这首歌的歌单</div>\n            {playlists.map((item) => {\n              return <SongsCoverMini info={item} key={item.id} />;\n            })}\n            <Download />\n          </div>\n        </SongWrapper>\n      </div>\n    )\n  );\n});\n"],"sourceRoot":""}