{"version":3,"sources":["components/songs-cover-mini/style.js","components/songs-cover-mini/index.js","pages/artist/style.js","pages/artist/index.js"],"names":["SongsCoverMiniWrapper","styled","div","memo","props","info","history","useHistory","playlistClick","id","push","className","onClick","e","src","getSizeImage","coverImgUrl","alt","name","creator","nickname","ArtistWrapper","TabPane","Tabs","location","useLocation","URLSearchParams","search","get","useState","artist","setArtist","songs","setSongs","playlists","setPlaylists","dispatch","useDispatch","useEffect","getArtistDetail","then","res","hotSongs","getPlayList","limit","picUrl","preventDefault","length","changePlaylistAction","getCurrentSongAction","defaultActiveKey","tab","briefDesc","map","item"],"mappings":"uJACaA,E,MAAwBC,EAAOC,IAAV,0f,OCGnBC,oBAAK,SAAwBC,GAC1C,IAAQC,EAASD,EAATC,KAEFC,EAAUC,cAChB,SAASC,EAAcC,GACrBH,EAAQI,KAAK,gBAAkBD,GAEjC,OACE,eAACT,EAAD,WACE,qBACEW,UAAU,gBACVC,QAAS,SAACC,GACRL,EAAcH,EAAKI,KAHvB,SAME,qBAAKK,IAAKC,YAAaV,EAAKW,YAAa,IAAKC,IAAI,OAEpD,sBAAKN,UAAU,iBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,mBACEC,QAAS,SAACC,GACRL,EAAcH,EAAKI,KAFvB,SAKGJ,EAAKa,SAGV,sBAAKP,UAAU,UAAf,UACE,sCACA,sBAAMA,UAAU,WAAhB,SAA4BN,EAAKc,SAAWd,EAAKc,QAAQC,wB,iIChCtDC,E,MAAgBpB,EAAOC,IAAV,+iE,wBCWlBoB,EAAYC,IAAZD,QACOnB,0BAAK,SAAgBC,GAClC,IAAMoB,EAAWC,cAEXhB,EADS,IAAIiB,gBAAgBF,EAASG,QAC1BC,IAAI,MACtB,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACMC,EAAWC,cAmBjB,OAlBAC,qBAAU,WACRC,YAAgB9B,GAAI+B,MAAK,SAACC,GACxBV,EAAUU,EAAIX,QACdG,EAASQ,EAAIC,aAEfC,YAAY,CACVC,MAAO,IACNJ,MAAK,SAACC,GACPN,EAAaM,EAAIP,gBAElB,CAACzB,IASF,eAACY,EAAD,WACE,sBAAKV,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,SAAyBmB,EAAOZ,OAChC,qBAAKP,UAAU,QAAf,SACE,qBAAKG,IAAKgB,EAAOe,OAAS,iBAAkB5B,IAAI,OAElD,sBAAKN,UAAU,OAAf,UACE,oBAAGA,UAAU,qBAAqBC,QAf1C,SAAsBC,GACpBA,EAAEiC,iBACEd,EAAMe,SACRX,EAASY,YAAqBhB,IAC9BI,EAASa,YAAqBjB,EAAM,GAAGvB,OAWnC,UACE,mBAAGE,UAAU,kBACb,mDAEF,sBAAMA,UAAU,yBAAhB,kBAEF,eAAC,IAAD,CAAMuC,iBAAiB,IAAvB,UACE,cAAC5B,EAAD,CAAS6B,IAAI,2BAAb,SACE,qBAAKxC,UAAU,WAAf,SACE,cAAC,IAAD,CAAUqB,MAAOA,OAFG,KAKxB,cAACV,EAAD,CAAS6B,IAAI,2BAAb,SACE,gCACE,mBAAGxC,UAAU,UAAb,SAAwBmB,EAAOZ,KAAO,uBACtC,mBAAGP,UAAU,UAAb,SAAwBmB,EAAOsB,gBAHX,WAQ5B,sBAAKzC,UAAU,QAAf,UACE,qBAAKA,UAAU,iBAAf,sCACCuB,EAAUmB,KAAI,SAACC,GACd,OAAO,cAAC,IAAD,CAAgBjD,KAAMiD,GAAWA,EAAK7C,OAE/C,cAAC,IAAD","file":"static/js/6.7d27fa6f.chunk.js","sourcesContent":["import styled from \"styled-components\";\nexport const SongsCoverMiniWrapper = styled.div`\n  display: flex;\n  width: 200px;\n  height: 50px;\n  margin-bottom: 15px;\n  line-height: 24px;\n  .playlist-left {\n    width: 50px;\n    height: 50px;\n    cursor: pointer;\n    img {\n      width: 100%;\n      height: 100%;\n    }\n  }\n  .playlist-right {\n    margin-left: 10px;\n    .name {\n      width: 140px;\n      a {\n        color: #000;\n        font-size: 14px;\n      }\n    }\n    .creator {\n      .nickname {\n        margin-left: 5px;\n      }\n    }\n  }\n`;\n","import { getSizeImage } from \"@/utils/format-data\";\nimport React, { memo } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { SongsCoverMiniWrapper } from \"./style\";\nexport default memo(function SongsCoverMini(props) {\n  const { info } = props;\n\n  const history = useHistory();\n  function playlistClick(id) {\n    history.push(\"/playlist?id=\" + id);\n  }\n  return (\n    <SongsCoverMiniWrapper>\n      <div\n        className=\"playlist-left\"\n        onClick={(e) => {\n          playlistClick(info.id);\n        }}\n      >\n        <img src={getSizeImage(info.coverImgUrl, 50)} alt=\"\" />\n      </div>\n      <div className=\"playlist-right\">\n        <div className=\"name text-nowrap\">\n          <a\n            onClick={(e) => {\n              playlistClick(info.id);\n            }}\n          >\n            {info.name}\n          </a>\n        </div>\n        <div className=\"creator\">\n          <span>by</span>\n          <span className=\"nickname\">{info.creator && info.creator.nickname}</span>\n        </div>\n      </div>\n    </SongsCoverMiniWrapper>\n  );\n});\n","import styled from \"styled-components\";\nexport const ArtistWrapper = styled.div`\n  width: 980px;\n  margin: 0 auto;\n  background-color: #fff;\n  border: 1px solid #d3d3d3;\n  border-width: 0 1px;\n  display: flex;\n  .left {\n    width: 709px;\n    padding: 47px 30px 40px 39px;\n    .jianjie {\n      color: #333;\n      font-size: 14px;\n      font-weight: 700;\n      margin-bottom: 10px;\n      padding-left: 5px;\n      border-left: 4px solid #c10d0c;\n    }\n    .content {\n      text-indent: 2em;\n      color: #666;\n      font-size: 12px;\n    }\n    .singer {\n      height: 34px;\n      line-height: 24px;\n      font-weight: normal;\n      font-size: 24px;\n      color: #333;\n      font-size: 24px;\n    }\n    .btns {\n      margin: 20px 0;\n      display: flex;\n      .play {\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        background-position: 0 -387px;\n        text-align: center;\n        width: 61px;\n        height: 31px;\n        color: #fff;\n        i {\n          display: inline-block;\n          width: 20px;\n          height: 18px;\n          margin: -2px 2px 0;\n          background-position: 0 -1622px;\n        }\n      }\n      .add-icon {\n        display: inline-block;\n        width: 31px;\n        height: 31px;\n        margin-left: -3px;\n        padding-right: 0;\n        background-position: 0 -1588px;\n        text-indent: -9999px;\n      }\n      .item {\n        display: inline-block;\n        height: 31px;\n        margin-right: 6px;\n        padding-right: 5px;\n        background-position: right -1020px;\n        display: flex;\n        align-items: center;\n      }\n      .comment-icon {\n        background-position: 0 -1465px;\n      }\n    }\n    .cover {\n      width: 640px;\n      height: 300px;\n      img {\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n  .right {\n    padding: 20px 40px 40px 30px;\n    border-left: 1px solid #ccc;\n    .related-singer {\n      height: 23px;\n      margin-bottom: 20px;\n      border-bottom: 1px solid #ccc;\n      color: #333;\n      font-weight: 700;\n    }\n  }\n`;\n","import PlayList from \"@/components/play-list\";\nimport { getArtistDetail } from \"@/services/article\";\nimport { Tabs } from \"antd\";\nimport React, { memo, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useLocation } from \"react-router\";\nimport Download from \"@/components/download\";\nimport { changePlaylistAction, getCurrentSongAction } from \"../player/store/actionCreators\";\nimport { ArtistWrapper } from \"./style\";\nimport SongsCoverMini from \"@/components/songs-cover-mini\";\nimport { getPlayList } from \"@/services/playlist\";\n\nconst { TabPane } = Tabs;\nexport default memo(function Actist(props) {\n  const location = useLocation();\n  const search = new URLSearchParams(location.search);\n  const id = search.get(\"id\");\n  const [artist, setArtist] = useState({});\n  const [songs, setSongs] = useState([]);\n  const [playlists, setPlaylists] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getArtistDetail(id).then((res) => {\n      setArtist(res.artist);\n      setSongs(res.hotSongs);\n    });\n    getPlayList({\n      limit: 5,\n    }).then((res) => {\n      setPlaylists(res.playlists);\n    });\n  }, [id]);\n  function playlistPlay(e) {\n    e.preventDefault();\n    if (songs.length) {\n      dispatch(changePlaylistAction(songs));\n      dispatch(getCurrentSongAction(songs[0].id));\n    }\n  }\n  return (\n    <ArtistWrapper>\n      <div className=\"left\">\n        <div className=\"singer\">{artist.name}</div>\n        <div className=\"cover\">\n          <img src={artist.picUrl + \"?param=640y300\"} alt=\"\" />\n        </div>\n        <div className=\"btns\">\n          <a className=\"sprite_button play\" onClick={playlistPlay}>\n            <i className=\"sprite_button\"></i>\n            <span>播放</span>\n          </a>\n          <span className=\"add-icon sprite_button\">+</span>\n        </div>\n        <Tabs defaultActiveKey=\"1\">\n          <TabPane tab=\"热门歌曲\" key=\"1\">\n            <div className=\"playlist\">\n              <PlayList songs={songs} />\n            </div>\n          </TabPane>\n          <TabPane tab=\"艺人介绍\" key=\"2\">\n            <div>\n              <p className=\"jianjie\">{artist.name + \"的简介\"}</p>\n              <p className=\"content\">{artist.briefDesc}</p>\n            </div>\n          </TabPane>\n        </Tabs>\n      </div>\n      <div className=\"right\">\n        <div className=\"related-singer\">热门歌单</div>\n        {playlists.map((item) => {\n          return <SongsCoverMini info={item} key={item.id} />;\n        })}\n        <Download />\n      </div>\n    </ArtistWrapper>\n  );\n});\n"],"sourceRoot":""}